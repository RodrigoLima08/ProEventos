{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, Directive, Input, Output, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport * as i2 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/** Default dropdown configuration */\nconst _c0 = function (a0) {\n  return {\n    dropdown: a0\n  };\n};\nconst _c1 = [\"*\"];\nclass BsDropdownConfig {\n  constructor() {\n    /** default dropdown auto closing behavior */\n    this.autoClose = true;\n    /** default dropdown auto closing behavior */\n    this.insideClick = false;\n    /** turn on/off animation */\n    this.isAnimated = false;\n    /** value true of stopOnClickPropagation allows event stopPropagation*/\n    this.stopOnClickPropagation = false;\n  }\n}\nBsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) {\n  return new (t || BsDropdownConfig)();\n};\nBsDropdownConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BsDropdownConfig,\n  factory: BsDropdownConfig.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass BsDropdownState {\n  constructor() {\n    this.direction = 'down';\n    this.autoClose = true;\n    this.insideClick = false;\n    this.isAnimated = false;\n    this.stopOnClickPropagation = false;\n    this.isOpenChange = new EventEmitter();\n    this.isDisabledChange = new EventEmitter();\n    this.toggleClick = new EventEmitter();\n    this.counts = 0;\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\n}\nBsDropdownState.ɵfac = function BsDropdownState_Factory(t) {\n  return new (t || BsDropdownState)();\n};\nBsDropdownState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BsDropdownState,\n  factory: BsDropdownState.ɵfac,\n  providedIn: 'platform'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nconst DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\nconst dropdownAnimation = [style({\n  height: 0,\n  overflow: 'hidden'\n}), animate(DROPDOWN_ANIMATION_TIMING, style({\n  height: '*',\n  overflow: 'hidden'\n}))];\n\n// todo: revert ngClass to [class] when false positive angular-cli issue is fixed\n//          [class.dropdown]=\"direction === 'down'\"-->\nclass BsDropdownContainerComponent {\n  constructor(_state, cd, _renderer, _element, _builder) {\n    this._state = _state;\n    this.cd = cd;\n    this._renderer = _renderer;\n    this._element = _element;\n    this.isOpen = false;\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n    this._subscription = _state.isOpenChange.subscribe(value => {\n      this.isOpen = value;\n      const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n      this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n      if (dropdown) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right') || dropdown.classList.contains('dropdown-menu-end')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n        }\n      }\n      if (dropdown && this._state.isAnimated) {\n        this._factoryDropDownAnimation.create(dropdown).play();\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n  get direction() {\n    return this._state.direction;\n  }\n  /** @internal */\n  _contains(el) {\n    return this._element.nativeElement.contains(el);\n  }\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\nBsDropdownContainerComponent.ɵfac = function BsDropdownContainerComponent_Factory(t) {\n  return new (t || BsDropdownContainerComponent)(i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n};\nBsDropdownContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BsDropdownContainerComponent,\n  selectors: [[\"bs-dropdown-container\"]],\n  hostAttrs: [2, \"display\", \"block\", \"position\", \"absolute\", \"z-index\", \"1040\"],\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 9,\n  consts: [[3, \"ngClass\"]],\n  template: function BsDropdownContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"dropup\", ctx.direction === \"up\")(\"show\", ctx.isOpen)(\"open\", ctx.isOpen);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.direction === \"down\"));\n    }\n  },\n  dependencies: [i3.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bs-dropdown-container',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        style: 'display:block;position: absolute;z-index: 1040'\n      },\n      template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: BsDropdownState\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.AnimationBuilder\n    }];\n  }, null);\n})();\nclass BsDropdownDirective {\n  constructor(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._viewContainerRef = _viewContainerRef;\n    this._cis = _cis;\n    this._state = _state;\n    this._config = _config;\n    /**\n     * This attribute indicates that the dropdown should be opened upwards\n     */\n    this.dropup = false;\n    // todo: move to component loader\n    this._isInlineOpen = false;\n    this._isDisabled = false;\n    this._subscriptions = [];\n    this._isInited = false;\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n    this._state.insideClick = this._config.insideClick;\n    this._state.isAnimated = this._config.isAnimated;\n    this._state.stopOnClickPropagation = this._config.stopOnClickPropagation;\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n    // create dropdown component loader\n    this._dropdown = this._cis.createLoader(this._elementRef, this._viewContainerRef, this._renderer).provide({\n      provide: BsDropdownState,\n      useValue: this._state\n    });\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n  }\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  set autoClose(value) {\n    this._state.autoClose = value;\n  }\n  get autoClose() {\n    return this._state.autoClose;\n  }\n  /**\n   * Indicates that dropdown will be animated\n   */\n  set isAnimated(value) {\n    this._state.isAnimated = value;\n  }\n  get isAnimated() {\n    return this._state.isAnimated;\n  }\n  /**\n   * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n   */\n  set insideClick(value) {\n    this._state.insideClick = value;\n  }\n  get insideClick() {\n    return this._state.insideClick;\n  }\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  set isDisabled(value) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n  get isDisabled() {\n    return this._isDisabled;\n  }\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  get isOpen() {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n    return this._dropdown.isShown;\n  }\n  set isOpen(value) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  get _showInline() {\n    return !this.container;\n  }\n  ngOnInit() {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    // toggle visibility on toggle element click\n    this._subscriptions.push(this._state.toggleClick.subscribe(value => this.toggle(value)));\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(this._state.isDisabledChange.pipe(filter(value => value)).subscribe(( /*value: boolean*/) => this.hide()));\n  }\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show() {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(dropdownMenu => {\n          this._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n          this._inlinedMenu = this._dropdown._inlineViewRef;\n          this.addBs4Polyfills();\n          if (this._inlinedMenu) {\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n          }\n          this.playAnimation();\n        })\n        // swallow errors\n        .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n      this.playAnimation();\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup = this.dropup || typeof this.dropup !== 'undefined' && this.dropup;\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement = this.placement || (_dropup ? 'top start' : 'bottom start');\n      // show dropdown\n      this._dropdown.attach(BsDropdownContainerComponent).to(this.container).position({\n        attachment: _placement\n      }).show({\n        content: dropdownMenu.templateRef,\n        placement: _placement\n      });\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n    .catch();\n  }\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide() {\n    if (!this.isOpen) {\n      return;\n    }\n    if (this._showInline) {\n      this.removeShowClass();\n      this.removeDropupStyles();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n    this._state.isOpenChange.emit(false);\n  }\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n   */\n  toggle(value) {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n    return this.show();\n  }\n  /** @internal */\n  _contains(event) {\n    // todo: valorkin fix typings\n    return this._elementRef.nativeElement.contains(event.target) || this._dropdown.instance && this._dropdown.instance._contains(event.target);\n  }\n  navigationClick(event) {\n    const ref = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n    if (!ref) {\n      return;\n    }\n    const firstActive = this._elementRef.nativeElement.ownerDocument.activeElement;\n    const allRef = ref.querySelectorAll('.dropdown-item');\n    switch (event.keyCode) {\n      case 38:\n        if (this._state.counts > 0) {\n          allRef[--this._state.counts].focus();\n        }\n        break;\n      case 40:\n        if (this._state.counts + 1 < allRef.length) {\n          if (firstActive.classList !== allRef[this._state.counts].classList) {\n            allRef[this._state.counts].focus();\n          } else {\n            allRef[++this._state.counts].focus();\n          }\n        }\n        break;\n      default:\n    }\n    event.preventDefault();\n  }\n  ngOnDestroy() {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n  addBs4Polyfills() {\n    this.addShowClass();\n    this.checkRightAlignment();\n    this.addDropupStyles();\n  }\n  playAnimation() {\n    if (this._state.isAnimated && this._inlinedMenu) {\n      setTimeout(() => {\n        if (this._inlinedMenu) {\n          this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play();\n        }\n      });\n    }\n  }\n  addShowClass() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n  removeShowClass() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n  checkRightAlignment() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right') || this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-end');\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n    }\n  }\n  addDropupStyles() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n    }\n  }\n  removeDropupStyles() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n    }\n  }\n}\nBsDropdownDirective.ɵfac = function BsDropdownDirective_Factory(t) {\n  return new (t || BsDropdownDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.ComponentLoaderFactory), i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(BsDropdownConfig), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n};\nBsDropdownDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownDirective,\n  selectors: [[\"\", \"bsDropdown\", \"\"], [\"\", \"dropdown\", \"\"]],\n  hostVars: 6,\n  hostBindings: function BsDropdownDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.arrowDown\", function BsDropdownDirective_keydown_arrowDown_HostBindingHandler($event) {\n        return ctx.navigationClick($event);\n      })(\"keydown.arrowUp\", function BsDropdownDirective_keydown_arrowUp_HostBindingHandler($event) {\n        return ctx.navigationClick($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"dropup\", ctx.dropup)(\"open\", ctx.isOpen)(\"show\", ctx.isOpen);\n    }\n  },\n  inputs: {\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    dropup: \"dropup\",\n    autoClose: \"autoClose\",\n    isAnimated: \"isAnimated\",\n    insideClick: \"insideClick\",\n    isDisabled: \"isDisabled\",\n    isOpen: \"isOpen\"\n  },\n  outputs: {\n    isOpenChange: \"isOpenChange\",\n    onShown: \"onShown\",\n    onHidden: \"onHidden\"\n  },\n  exportAs: [\"bs-dropdown\"],\n  features: [i0.ɵɵProvidersFeature([BsDropdownState])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdown], [dropdown]',\n      exportAs: 'bs-dropdown',\n      providers: [BsDropdownState],\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        '[class.dropup]': 'dropup',\n        '[class.open]': 'isOpen',\n        '[class.show]': 'isOpen'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i1.ComponentLoaderFactory\n    }, {\n      type: BsDropdownState\n    }, {\n      type: BsDropdownConfig\n    }, {\n      type: i2.AnimationBuilder\n    }];\n  }, {\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    dropup: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    isAnimated: [{\n      type: Input\n    }],\n    insideClick: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    isOpenChange: [{\n      type: Output\n    }],\n    onShown: [{\n      type: Output\n    }],\n    onHidden: [{\n      type: Output\n    }],\n    navigationClick: [{\n      type: HostListener,\n      args: ['keydown.arrowDown', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.arrowUp', ['$event']]\n    }]\n  });\n})();\nclass BsDropdownMenuDirective {\n  constructor(_state, _viewContainer, _templateRef) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\n}\nBsDropdownMenuDirective.ɵfac = function BsDropdownMenuDirective_Factory(t) {\n  return new (t || BsDropdownMenuDirective)(i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nBsDropdownMenuDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownMenuDirective,\n  selectors: [[\"\", \"bsDropdownMenu\", \"\"], [\"\", \"dropdownMenu\", \"\"]],\n  exportAs: [\"bs-dropdown-menu\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownMenuDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdownMenu],[dropdownMenu]',\n      exportAs: 'bs-dropdown-menu'\n    }]\n  }], function () {\n    return [{\n      type: BsDropdownState\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\nclass BsDropdownToggleDirective {\n  constructor(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dropdown = _dropdown;\n    this._element = _element;\n    this._renderer = _renderer;\n    this._state = _state;\n    this.isOpen = false;\n    this._subscriptions = [];\n    // sync is open value with state\n    this._subscriptions.push(this._state.isOpenChange.subscribe(value => {\n      this.isOpen = value;\n      if (value) {\n        this._documentClickListener = this._renderer.listen('document', 'click', event => {\n          if (this._state.autoClose && event.button !== 2 && !this._element.nativeElement.contains(event.target) && !(this._state.insideClick && this._dropdown._contains(event))) {\n            this._state.toggleClick.emit(false);\n            this._changeDetectorRef.detectChanges();\n          }\n        });\n        this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n          if (this._state.autoClose) {\n            this._state.toggleClick.emit(false);\n            this._changeDetectorRef.detectChanges();\n          }\n        });\n      } else {\n        this._documentClickListener && this._documentClickListener();\n        this._escKeyUpListener && this._escKeyUpListener();\n      }\n    }));\n    // populate disabled state\n    this._subscriptions.push(this._state.isDisabledChange.subscribe(value => this.isDisabled = value || void 0));\n  }\n  onClick(event) {\n    if (this._state.stopOnClickPropagation) {\n      event.stopPropagation();\n    }\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n  ngOnDestroy() {\n    if (this._documentClickListener) {\n      this._documentClickListener();\n    }\n    if (this._escKeyUpListener) {\n      this._escKeyUpListener();\n    }\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\n}\nBsDropdownToggleDirective.ɵfac = function BsDropdownToggleDirective_Factory(t) {\n  return new (t || BsDropdownToggleDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(BsDropdownDirective), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(BsDropdownState));\n};\nBsDropdownToggleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownToggleDirective,\n  selectors: [[\"\", \"bsDropdownToggle\", \"\"], [\"\", \"dropdownToggle\", \"\"]],\n  hostVars: 3,\n  hostBindings: function BsDropdownToggleDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function BsDropdownToggleDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-haspopup\", true)(\"disabled\", ctx.isDisabled)(\"aria-expanded\", ctx.isOpen);\n    }\n  },\n  exportAs: [\"bs-dropdown-toggle\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownToggleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdownToggle],[dropdownToggle]',\n      exportAs: 'bs-dropdown-toggle',\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        '[attr.aria-haspopup]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: BsDropdownDirective\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: BsDropdownState\n    }];\n  }, {\n    isDisabled: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    isOpen: [{\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\nclass BsDropdownModule {\n  static forRoot() {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [ComponentLoaderFactory, PositioningService, BsDropdownState]\n    };\n  }\n}\nBsDropdownModule.ɵfac = function BsDropdownModule_Factory(t) {\n  return new (t || BsDropdownModule)();\n};\nBsDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BsDropdownModule\n});\nBsDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownContainerComponent, BsDropdownDirective],\n      exports: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };","map":{"version":3,"names":["i0","Injectable","EventEmitter","Component","ChangeDetectionStrategy","Directive","Input","Output","HostListener","HostBinding","NgModule","filter","i1","ComponentLoaderFactory","i2","style","animate","i3","CommonModule","PositioningService","BsDropdownConfig","constructor","autoClose","insideClick","isAnimated","stopOnClickPropagation","ɵfac","ɵprov","type","args","providedIn","BsDropdownState","direction","isOpenChange","isDisabledChange","toggleClick","counts","dropdownMenu","Promise","resolve","resolveDropdownMenu","DROPDOWN_ANIMATION_TIMING","dropdownAnimation","height","overflow","BsDropdownContainerComponent","_state","cd","_renderer","_element","_builder","isOpen","_factoryDropDownAnimation","build","_subscription","subscribe","value","dropdown","nativeElement","querySelector","addClass","classList","contains","setStyle","create","play","markForCheck","detectChanges","_contains","el","ngOnDestroy","unsubscribe","ChangeDetectorRef","Renderer2","ElementRef","AnimationBuilder","ɵcmp","NgClass","selector","changeDetection","OnPush","host","template","BsDropdownDirective","_elementRef","_viewContainerRef","_cis","_config","dropup","_isInlineOpen","_isDisabled","_subscriptions","_isInited","_dropdown","createLoader","provide","useValue","onShown","onHidden","isDisabled","emit","hide","_showInline","isShown","show","container","ngOnInit","listen","outsideClick","triggers","push","toggle","pipe","_inlinedMenu","then","attachInline","viewContainer","templateRef","_inlineViewRef","addBs4Polyfills","rootNodes","parentNode","playAnimation","catch","_dropup","_placement","placement","attach","to","position","attachment","content","removeShowClass","removeDropupStyles","event","target","instance","navigationClick","ref","firstActive","ownerDocument","activeElement","allRef","querySelectorAll","keyCode","focus","length","preventDefault","sub","dispose","addShowClass","checkRightAlignment","addDropupStyles","setTimeout","removeClass","isRightAligned","removeStyle","ViewContainerRef","ɵdir","exportAs","providers","BsDropdownMenuDirective","_viewContainer","_templateRef","TemplateRef","BsDropdownToggleDirective","_changeDetectorRef","_documentClickListener","button","_escKeyUpListener","onClick","stopPropagation","BsDropdownModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/producao/Desktop/ProEventos/front/ProEventos-App/node_modules/ngx-bootstrap/dropdown/fesm2020/ngx-bootstrap-dropdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, Directive, Input, Output, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport * as i2 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/** Default dropdown configuration */\nclass BsDropdownConfig {\n    constructor() {\n        /** default dropdown auto closing behavior */\n        this.autoClose = true;\n        /** default dropdown auto closing behavior */\n        this.insideClick = false;\n        /** turn on/off animation */\n        this.isAnimated = false;\n        /** value true of stopOnClickPropagation allows event stopPropagation*/\n        this.stopOnClickPropagation = false;\n    }\n}\nBsDropdownConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBsDropdownConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass BsDropdownState {\n    constructor() {\n        this.direction = 'down';\n        this.autoClose = true;\n        this.insideClick = false;\n        this.isAnimated = false;\n        this.stopOnClickPropagation = false;\n        this.isOpenChange = new EventEmitter();\n        this.isDisabledChange = new EventEmitter();\n        this.toggleClick = new EventEmitter();\n        this.counts = 0;\n        this.dropdownMenu = new Promise(resolve => {\n            this.resolveDropdownMenu = resolve;\n        });\n    }\n}\nBsDropdownState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBsDropdownState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownState, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownState, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\nconst DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\nconst dropdownAnimation = [\n    style({ height: 0, overflow: 'hidden' }),\n    animate(DROPDOWN_ANIMATION_TIMING, style({ height: '*', overflow: 'hidden' }))\n];\n\n// todo: revert ngClass to [class] when false positive angular-cli issue is fixed\n//          [class.dropdown]=\"direction === 'down'\"-->\nclass BsDropdownContainerComponent {\n    constructor(_state, cd, _renderer, _element, _builder) {\n        this._state = _state;\n        this.cd = cd;\n        this._renderer = _renderer;\n        this._element = _element;\n        this.isOpen = false;\n        this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n        this._subscription = _state.isOpenChange.subscribe((value) => {\n            this.isOpen = value;\n            const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n            this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n            if (dropdown) {\n                this._renderer.addClass(dropdown, 'show');\n                if (dropdown.classList.contains('dropdown-menu-right') || dropdown.classList.contains('dropdown-menu-end')) {\n                    this._renderer.setStyle(dropdown, 'left', 'auto');\n                    this._renderer.setStyle(dropdown, 'right', '0');\n                }\n                if (this.direction === 'up') {\n                    this._renderer.setStyle(dropdown, 'top', 'auto');\n                    this._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n                }\n            }\n            if (dropdown && this._state.isAnimated) {\n                this._factoryDropDownAnimation.create(dropdown)\n                    .play();\n            }\n            this.cd.markForCheck();\n            this.cd.detectChanges();\n        });\n    }\n    get direction() {\n        return this._state.direction;\n    }\n    /** @internal */\n    _contains(el) {\n        return this._element.nativeElement.contains(el);\n    }\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\n}\nBsDropdownContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownContainerComponent, deps: [{ token: BsDropdownState }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\nBsDropdownContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.3\", type: BsDropdownContainerComponent, selector: \"bs-dropdown-container\", host: { styleAttribute: \"display:block;position: absolute;z-index: 1040\" }, ngImport: i0, template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bs-dropdown-container',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        style: 'display:block;position: absolute;z-index: 1040'\n                    },\n                    template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: BsDropdownState }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i2.AnimationBuilder }]; } });\n\nclass BsDropdownDirective {\n    constructor(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._viewContainerRef = _viewContainerRef;\n        this._cis = _cis;\n        this._state = _state;\n        this._config = _config;\n        /**\n         * This attribute indicates that the dropdown should be opened upwards\n         */\n        this.dropup = false;\n        // todo: move to component loader\n        this._isInlineOpen = false;\n        this._isDisabled = false;\n        this._subscriptions = [];\n        this._isInited = false;\n        // set initial dropdown state from config\n        this._state.autoClose = this._config.autoClose;\n        this._state.insideClick = this._config.insideClick;\n        this._state.isAnimated = this._config.isAnimated;\n        this._state.stopOnClickPropagation = this._config.stopOnClickPropagation;\n        this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n        // create dropdown component loader\n        this._dropdown = this._cis\n            .createLoader(this._elementRef, this._viewContainerRef, this._renderer)\n            .provide({ provide: BsDropdownState, useValue: this._state });\n        this.onShown = this._dropdown.onShown;\n        this.onHidden = this._dropdown.onHidden;\n        this.isOpenChange = this._state.isOpenChange;\n    }\n    /**\n     * Indicates that dropdown will be closed on item or document click,\n     * and after pressing ESC\n     */\n    set autoClose(value) {\n        this._state.autoClose = value;\n    }\n    get autoClose() {\n        return this._state.autoClose;\n    }\n    /**\n     * Indicates that dropdown will be animated\n     */\n    set isAnimated(value) {\n        this._state.isAnimated = value;\n    }\n    get isAnimated() {\n        return this._state.isAnimated;\n    }\n    /**\n     * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n     */\n    set insideClick(value) {\n        this._state.insideClick = value;\n    }\n    get insideClick() {\n        return this._state.insideClick;\n    }\n    /**\n     * Disables dropdown toggle and hides dropdown menu if opened\n     */\n    set isDisabled(value) {\n        this._isDisabled = value;\n        this._state.isDisabledChange.emit(value);\n        if (value) {\n            this.hide();\n        }\n    }\n    get isDisabled() {\n        return this._isDisabled;\n    }\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n    get isOpen() {\n        if (this._showInline) {\n            return this._isInlineOpen;\n        }\n        return this._dropdown.isShown;\n    }\n    set isOpen(value) {\n        if (value) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    get _showInline() {\n        return !this.container;\n    }\n    ngOnInit() {\n        // fix: seems there are an issue with `routerLinkActive`\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n        if (this._isInited) {\n            return;\n        }\n        this._isInited = true;\n        // attach DOM listeners\n        this._dropdown.listen({\n            // because of dropdown inline mode\n            outsideClick: false,\n            triggers: this.triggers,\n            show: () => this.show()\n        });\n        // toggle visibility on toggle element click\n        this._subscriptions.push(this._state.toggleClick.subscribe((value) => this.toggle(value)));\n        // hide dropdown if set disabled while opened\n        this._subscriptions.push(this._state.isDisabledChange\n            .pipe(filter((value) => value))\n            .subscribe(( /*value: boolean*/) => this.hide()));\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    show() {\n        if (this.isOpen || this.isDisabled) {\n            return;\n        }\n        if (this._showInline) {\n            if (!this._inlinedMenu) {\n                this._state.dropdownMenu.then((dropdownMenu) => {\n                    this._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n                    this._inlinedMenu = this._dropdown._inlineViewRef;\n                    this.addBs4Polyfills();\n                    if (this._inlinedMenu) {\n                        this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n                    }\n                    this.playAnimation();\n                })\n                    // swallow errors\n                    .catch();\n            }\n            this.addBs4Polyfills();\n            this._isInlineOpen = true;\n            this.onShown.emit(true);\n            this._state.isOpenChange.emit(true);\n            this.playAnimation();\n            return;\n        }\n        this._state.dropdownMenu.then(dropdownMenu => {\n            // check direction in which dropdown should be opened\n            const _dropup = this.dropup ||\n                (typeof this.dropup !== 'undefined' && this.dropup);\n            this._state.direction = _dropup ? 'up' : 'down';\n            const _placement = this.placement || (_dropup ? 'top start' : 'bottom start');\n            // show dropdown\n            this._dropdown\n                .attach(BsDropdownContainerComponent)\n                .to(this.container)\n                .position({ attachment: _placement })\n                .show({\n                content: dropdownMenu.templateRef,\n                placement: _placement\n            });\n            this._state.isOpenChange.emit(true);\n        })\n            // swallow error\n            .catch();\n    }\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    hide() {\n        if (!this.isOpen) {\n            return;\n        }\n        if (this._showInline) {\n            this.removeShowClass();\n            this.removeDropupStyles();\n            this._isInlineOpen = false;\n            this.onHidden.emit(true);\n        }\n        else {\n            this._dropdown.hide();\n        }\n        this._state.isOpenChange.emit(false);\n    }\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n     * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n     */\n    toggle(value) {\n        if (this.isOpen || !value) {\n            return this.hide();\n        }\n        return this.show();\n    }\n    /** @internal */\n    _contains(event) {\n        // todo: valorkin fix typings\n        return this._elementRef.nativeElement.contains(event.target) ||\n            (this._dropdown.instance && this._dropdown.instance._contains(event.target));\n    }\n    navigationClick(event) {\n        const ref = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n        if (!ref) {\n            return;\n        }\n        const firstActive = this._elementRef.nativeElement.ownerDocument.activeElement;\n        const allRef = ref.querySelectorAll('.dropdown-item');\n        switch (event.keyCode) {\n            case 38:\n                if (this._state.counts > 0) {\n                    allRef[--this._state.counts].focus();\n                }\n                break;\n            case 40:\n                if (this._state.counts + 1 < allRef.length) {\n                    if (firstActive.classList !== allRef[this._state.counts].classList) {\n                        allRef[this._state.counts].focus();\n                    }\n                    else {\n                        allRef[++this._state.counts].focus();\n                    }\n                }\n                break;\n            default:\n        }\n        event.preventDefault();\n    }\n    ngOnDestroy() {\n        // clean up subscriptions and destroy dropdown\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n        this._dropdown.dispose();\n    }\n    addBs4Polyfills() {\n        this.addShowClass();\n        this.checkRightAlignment();\n        this.addDropupStyles();\n    }\n    playAnimation() {\n        if (this._state.isAnimated && this._inlinedMenu) {\n            setTimeout(() => {\n                if (this._inlinedMenu) {\n                    this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play();\n                }\n            });\n        }\n    }\n    addShowClass() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n        }\n    }\n    removeShowClass() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n        }\n    }\n    checkRightAlignment() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right') || this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-end');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n        }\n    }\n    addDropupStyles() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            // a little hack to not break support of bootstrap 4 beta\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n        }\n    }\n    removeDropupStyles() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n        }\n    }\n}\nBsDropdownDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ViewContainerRef }, { token: i1.ComponentLoaderFactory }, { token: BsDropdownState }, { token: BsDropdownConfig }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.3\", type: BsDropdownDirective, selector: \"[bsDropdown], [dropdown]\", inputs: { placement: \"placement\", triggers: \"triggers\", container: \"container\", dropup: \"dropup\", autoClose: \"autoClose\", isAnimated: \"isAnimated\", insideClick: \"insideClick\", isDisabled: \"isDisabled\", isOpen: \"isOpen\" }, outputs: { isOpenChange: \"isOpenChange\", onShown: \"onShown\", onHidden: \"onHidden\" }, host: { listeners: { \"keydown.arrowDown\": \"navigationClick($event)\", \"keydown.arrowUp\": \"navigationClick($event)\" }, properties: { \"class.dropup\": \"dropup\", \"class.open\": \"isOpen\", \"class.show\": \"isOpen\" } }, providers: [BsDropdownState], exportAs: [\"bs-dropdown\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdown], [dropdown]',\n                    exportAs: 'bs-dropdown',\n                    providers: [BsDropdownState],\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[class.dropup]': 'dropup',\n                        '[class.open]': 'isOpen',\n                        '[class.show]': 'isOpen'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ViewContainerRef }, { type: i1.ComponentLoaderFactory }, { type: BsDropdownState }, { type: BsDropdownConfig }, { type: i2.AnimationBuilder }]; }, propDecorators: { placement: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], dropup: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], isAnimated: [{\n                type: Input\n            }], insideClick: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }], isOpen: [{\n                type: Input\n            }], isOpenChange: [{\n                type: Output\n            }], onShown: [{\n                type: Output\n            }], onHidden: [{\n                type: Output\n            }], navigationClick: [{\n                type: HostListener,\n                args: ['keydown.arrowDown', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.arrowUp', ['$event']]\n            }] } });\n\nclass BsDropdownMenuDirective {\n    constructor(_state, _viewContainer, _templateRef) {\n        _state.resolveDropdownMenu({\n            templateRef: _templateRef,\n            viewContainer: _viewContainer\n        });\n    }\n}\nBsDropdownMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownMenuDirective, deps: [{ token: BsDropdownState }, { token: i0.ViewContainerRef }, { token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.3\", type: BsDropdownMenuDirective, selector: \"[bsDropdownMenu],[dropdownMenu]\", exportAs: [\"bs-dropdown-menu\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownMenuDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdownMenu],[dropdownMenu]',\n                    exportAs: 'bs-dropdown-menu'\n                }]\n        }], ctorParameters: function () { return [{ type: BsDropdownState }, { type: i0.ViewContainerRef }, { type: i0.TemplateRef }]; } });\n\nclass BsDropdownToggleDirective {\n    constructor(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dropdown = _dropdown;\n        this._element = _element;\n        this._renderer = _renderer;\n        this._state = _state;\n        this.isOpen = false;\n        this._subscriptions = [];\n        // sync is open value with state\n        this._subscriptions.push(this._state.isOpenChange.subscribe((value) => {\n            this.isOpen = value;\n            if (value) {\n                this._documentClickListener = this._renderer.listen('document', 'click', (event) => {\n                    if (this._state.autoClose && event.button !== 2 &&\n                        !this._element.nativeElement.contains(event.target) &&\n                        !(this._state.insideClick && this._dropdown._contains(event))) {\n                        this._state.toggleClick.emit(false);\n                        this._changeDetectorRef.detectChanges();\n                    }\n                });\n                this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n                    if (this._state.autoClose) {\n                        this._state.toggleClick.emit(false);\n                        this._changeDetectorRef.detectChanges();\n                    }\n                });\n            }\n            else {\n                this._documentClickListener && this._documentClickListener();\n                this._escKeyUpListener && this._escKeyUpListener();\n            }\n        }));\n        // populate disabled state\n        this._subscriptions.push(this._state.isDisabledChange\n            .subscribe((value) => this.isDisabled = value || void 0));\n    }\n    onClick(event) {\n        if (this._state.stopOnClickPropagation) {\n            event.stopPropagation();\n        }\n        if (this.isDisabled) {\n            return;\n        }\n        this._state.toggleClick.emit(true);\n    }\n    ngOnDestroy() {\n        if (this._documentClickListener) {\n            this._documentClickListener();\n        }\n        if (this._escKeyUpListener) {\n            this._escKeyUpListener();\n        }\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n    }\n}\nBsDropdownToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownToggleDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: BsDropdownDirective }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: BsDropdownState }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.3\", type: BsDropdownToggleDirective, selector: \"[bsDropdownToggle],[dropdownToggle]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"attr.aria-haspopup\": \"true\", \"attr.disabled\": \"this.isDisabled\", \"attr.aria-expanded\": \"this.isOpen\" } }, exportAs: [\"bs-dropdown-toggle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownToggleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdownToggle],[dropdownToggle]',\n                    exportAs: 'bs-dropdown-toggle',\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[attr.aria-haspopup]': 'true'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: BsDropdownDirective }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: BsDropdownState }]; }, propDecorators: { isDisabled: [{\n                type: HostBinding,\n                args: ['attr.disabled']\n            }], isOpen: [{\n                type: HostBinding,\n                args: ['attr.aria-expanded']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\nclass BsDropdownModule {\n    static forRoot() {\n        return {\n            ngModule: BsDropdownModule,\n            providers: [\n                ComponentLoaderFactory,\n                PositioningService,\n                BsDropdownState\n            ]\n        };\n    }\n}\nBsDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBsDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownModule, declarations: [BsDropdownMenuDirective,\n        BsDropdownToggleDirective,\n        BsDropdownContainerComponent,\n        BsDropdownDirective], imports: [CommonModule], exports: [BsDropdownMenuDirective,\n        BsDropdownToggleDirective,\n        BsDropdownDirective] });\nBsDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BsDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        BsDropdownMenuDirective,\n                        BsDropdownToggleDirective,\n                        BsDropdownContainerComponent,\n                        BsDropdownDirective\n                    ],\n                    exports: [\n                        BsDropdownMenuDirective,\n                        BsDropdownToggleDirective,\n                        BsDropdownDirective\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}